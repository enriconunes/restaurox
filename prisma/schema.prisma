datasource db {
  provider = "sqlite"
  url      = "file:./dev.db" //db local provisoria
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  todos         Todo[]

  stripeCustomerId         String? //id do cliente dentro do stripe
  stripeSubscriptionId     String? //id da assinatura dele
  stripeSubscriptionStatus String? //status da assinatura
  stripePriceId            String? //id do pre√ßo da assinatura - usado para identificar o plano atual
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// contas vinculadas a um user
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

// controle de sessao
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// token para verificacao por email (magic login ou redefinicao de senha)
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}
 

model Todo {
  id            String   @id @default(cuid())
  title         String 
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  doneAt        DateTime?
}